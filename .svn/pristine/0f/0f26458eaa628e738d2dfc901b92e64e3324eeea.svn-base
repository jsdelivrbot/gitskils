<template>

	<div>

		<app-header title="服务申请">
			<div slot='right' @click="save">
				<label for="">保存</label>
			</div>
		</app-header>
		<div class="itsq-main">
			<div @click="ChoiceSystem" class='itsq-item'>
				<mt-cell v-bind:title="system">
					<span class="fa fa-angle-down"> </span>
				</mt-cell>
			</div>

			<div @click="ChoiceCotegory" class='itsq-item'>
				<mt-cell class='itsq-item' v-bind:title="Cotegory">
					<span class="fa fa-angle-down"> </span>
				</mt-cell>
			</div>
			<div class='itsq-item' @click="ChoiceSystemId">
				<mt-cell class='itsq-item' v-bind:title="systemId">
					<span class="fa fa-angle-down"> </span>
				</mt-cell>
			</div>
			<div class='itsq-item' @click="ChoiceModule">
				<mt-cell class='itsq-item' v-bind:title="Module">
					<span class="fa fa-angle-down"> </span>
				</mt-cell>
			</div>

			<div class="itsq-item itsq-description">
				<mt-field label="描述" placeholder="请输入服务名称（不超过40字）" v-model="description"></mt-field>
			</div>
			<div class="itsq-item itsq-description">
				<mt-field label="详情" placeholder="请输入详情（0-500）" v-model="detail">
				</mt-field>
			</div>
			<div class="itsq-item itsq-img ">
				<mt-cell title="上传图片">
					<span class="itsq-plus"> </span>
				</mt-cell>
			</div>
			<div class='itsq-jjsq'>
				<label>
					<input type="checkbox" name="" id="" value="" />
					紧急申请
				</label>
			</div>
			<!-- <div class="itsq-submit">
				<mt-button type="primary" size="large">提交</mt-button>
			</div> -->

      <div class="itsq-footer">
        <mt-button class="button" type="primary" size="large">提  交</mt-button>
      </div>

		</div>

    <!--选择系统-->
		<mt-popup v-model="SystemVisible" position="bottom" class="xitong-wrapper">
      <div class="IT-navigation">
        选择系统
      </div>
      <div>
        <mt-picker :slots="slots1" @change="onValuesChangeSytem"></mt-picker>
      </div>
      <div>
        <mt-button type="default" style="width: 50%;float: left;font-size: 14px">取消</mt-button>
        <mt-button type="primary" style="width: 50%;float:left;font-size: 14px" @click="enSureSystem">确定</mt-button>
      </div>

		</mt-popup>

    <!--选择分类-->
    <mt-popup v-model="CotegoryVisible" position="bottom" class="xitong-wrapper">
      <div class="IT-navigation">
        选择分类
      </div>
      <div>
        <mt-picker :slots="slots2" @change="onValuesChangeCotegory"></mt-picker>
      </div>
      <div>
        <mt-button type="default" style="width: 50%;float: left;font-size: 14px">取消</mt-button>
        <mt-button type="primary" style="width: 50%;float:left;font-size: 14px" @click="enSureCotegory">确定</mt-button>
      </div>

    </mt-popup>

    <!--选择系统标识-->
    <mt-popup v-model="SystemIdVisible" position="bottom" class="xitong-wrapper">
      <div class="IT-navigation">
        选择系统标识
      </div>
      <div>
        <mt-picker :slots="slots3" @change="onValuesChangeSytemId"></mt-picker>
      </div>
      <div>
        <mt-button type="default" style="width: 50%;float: left;font-size: 14px">取消</mt-button>
        <mt-button type="primary" style="width: 50%;float:left;font-size: 14px" @click="enSureSystemId">确定</mt-button>
      </div>

    </mt-popup>

    <!--选择模块-->
    <mt-popup v-model="ModuleVisible" position="bottom" class="xitong-wrapper">
      <div class="IT-navigation">
        选择模块
      </div>
      <div>
        <mt-picker :slots="slots4" @change="onValuesChangeModule"></mt-picker>
      </div>
      <div>
        <mt-button type="default" style="width: 50%;float: left;font-size: 14px">取消</mt-button>
        <mt-button type="primary" style="width: 50%;float:left;font-size: 14px" @click="enSureModule">确定</mt-button>
      </div>

    </mt-popup>
	</div>
</template>

<script>
	import AppHeader from "@/components/HeaderComponent";
	import { Field } from 'mint-ui';
	import { Cell } from 'mint-ui';
	import { Buttons } from 'mint-ui';
	import { Popups } from 'mint-ui';
	import { Pickers } from 'mint-ui';
  import { httpGetMethod } from "../utils/api.js"; //添加公共组件
  import { httpWebservice } from "../utils/api.js"; //添加公共组件

	export default {
		name: 'ItsqComponent',
		data: function() {
			return {
				description: "",
				detail: "",
        SystemVisible: false,
        CotegoryVisible:false,
        SystemIdVisible:false,
        ModuleVisible:false,
        SystemList:[],
        CotegoryList:[],
        SystemIdList:[],
        ModuleList:[],
        systemCode:'',
        categoryCode:'',
        systemIdentyCode:'',
        moduleCode:'',
        system:'请选择系统',
        systems:'',
        Cotegory:'请选择分类',
        Cotegorys:'',
        systemId:'请选择系统标识',
        systemIds:'',
        Module:'请选择模块',
        Modules:'',
        slots1: [
          {
            flex: 1,
            values: [],
            className: 'slot1',
            textAlign: 'left'
          }
        ],
        slots2: [
          {
            flex: 1,
            values: [],
            className: 'slot1',
            textAlign: 'left'
          }
        ],
        slots3: [
          {
            flex: 1,
            values: [],
            className: 'slot1',
            textAlign: 'left'
          }
        ],
        slots4: [
          {
            flex: 1,
            values: [],
            className: 'slot1',
            textAlign: 'left'
          }
        ]
			}
		},
		methods: {
			save: function() {
				alert("保存的方法");
			},
      ChoiceSystem: function() {
        let self = this;
        //获取系统列表
        httpWebservice("InitSystem",{
          "userCode":"jing.wang1"
        },function(result){
          result.SystemListInfo.forEach(function (item) {
            self.SystemList.push(item);
          })
          self.SystemList.forEach(function (item) {
            self.slots1[0].values.push(item.SysName);
          })
        })
        self.SystemVisible = true;
        self.SystemList = [];
        self.slots1[0].values = [];
			},
      ChoiceCotegory : function () {
        let self = this;
        self.SystemList.forEach(function (item) {
          if(self.system == item.SysName){
            self.systemCode = item.SysCode;
          }
        })
        //获取分类列表
        self.slots2[0].values = [];
        httpWebservice("GetFormSubmitItemModulBySys",{
          "systemCode":self.systemCode
        },function(result){
          result.CotegoryListInfo.forEach(function (item) {
            self.CotegoryList.push(item);
          });
          self.CotegoryList.forEach(function (item) {
            self.slots2[0].values.push(item.CotegoryName);
          })
        })
        self.CotegoryVisible = true;
        self.CotegoryList = [];
        self.slots2[0].values = [];
      },
      ChoiceSystemId : function () {
        this.SystemIdVisible = true;
      },
      ChoiceModule: function () {
        this.ModuleVisible = true;
      },
      onValuesChangeSytem: function (picker, values) {
        this.systems = values;
      },
      onValuesChangeCotegory : function (picker, values) {
        this.Cotegorys = values;
      },
      onValuesChangeSytemId :function (picker, values) {
        this.systemIds= values;
      },
      onValuesChangeModule :function (picker, values) {
        this.Modules = values;
      },
      enSureSystem: function () {
        this.system = this.systems[0];
        this.SystemVisible = false;
      },
      enSureCotegory: function () {
			  let self = this;
        self.Cotegory = self.Cotegorys[0];
        self.CotegoryVisible = false;
        self.CotegoryList.forEach(function (item) {
          if(self.Cotegory == item.CotegoryName){
            self.categoryCode = item.CotegoryCode;
          }
        })
        //获取系统标识和模块
        httpWebservice("GetSystemIdentyAndModuleBySysAndCotegory",{
          "systemCode":self.systemCode,
          "categoryCode":self.categoryCode
        },function(result){
          console.log(result);
//          获取系统标识
//          if(){
//
//          }
          result.SystemIdentyListInfo.forEach(function (item) {
            self.SystemIdList.push(item);
          });
          self.SystemIdList.forEach(function (item) {
            self.slots3[0].values.push(item.SystemIdentyName);
          })
//          获取模块
          result.ModuleListInfo.forEach(function (item) {
            self.ModuleList.push(item);
          });
          self.ModuleList.forEach(function (item) {
            self.slots4[0].values.push(item.ModuleName);
          })
          console.log(self.ModuleList);
        })
      },
      enSureSystemId: function () {
        let self = this;
        self.systemId = self.systemIds[0];
        self.SystemIdVisible = false;
        self.SystemIdList.forEach(function (item) {
          if(self.systemId == item.SystemIdentyName){
            self.systemIdentyCode = item.SystemIdentyCode;
          }
        })
        console.log(self.systemIdentyCode);
        self.SystemIdVisible = false;
      },
      enSureModule: function () {
        let self = this;
        self.Module = self.Modules[0];
        self.ModuleVisible = false;
        self.ModuleList.forEach(function (item) {
          if(self.Module == item.ModuleName){
            self.moduleCode = item.ModuleCode;
          }
        })
        console.log(self.moduleCode);
        self.ModuleVisible = false;
      },
      getSystem: function () {

      }
    },
    mounted: function () {


    },
		components: {
			AppHeader,
			Cell,
			Field,
			Buttons,
			Popups,
			Pickers
		}
	}
</script>
<style type="text/css">

  .button {
    width: 100%;
    background-color: #3d74d9 !important;
    margin: 0;
  }

  .itsq-footer {
    width: 100%;
    position: absolute;
    bottom: 0;
    left: 0;
    background-color: #3d74d9 !important;
  }

	.jqqd-main {
		background: #f5f5f5;
		width: 100%;
		padding: 10px 0;
		display: flex;
		justify-content: flex-start;
	}

	.itsq-item .mint-cell-wrapper {
		background-size: 0;
		text-align: left;
	}

	.itsq-description {
		margin: 10px 0;
		border-top: 1px solid #d9d9d9;
	}

	.itsq-description .mint-cell-title {
		width: 60px;
	}

	.itsq-img {
		border-top: 1px solid #d9d9d9;
	}

	.itsq-plus {
		background: url(../../static/plus.png) no-repeat center;
		background-size: contain;
		display: block;
		width: 25px;
		height: 25px;
	}

	.itsq-jjsq label {
		display: flex;
		padding: 10px;
		align-items: center;
		justify-content: flex-start;
		font-size: 14px;
	}

	.itsq-jjsq input[type='checkbox'] {
		margin-right: 6px;
		outline: none;
		background: #fff;
		appearance: none;
		border: 1px solid #d8d8d8;
		width: 20px;
		height: 20px;
		border-radius: 3px;
	}

	.itsq-jjsq input[type='checkbox']:checked {
		background: url(../../static/checkbox_select.png) no-repeat center;
		background-size: contain;
	}

	.itsq-submit {
		margin: 50px 10px 0;
	}
	.xitong-wrapper{
		height: auto;
		width: 100%;
		background: #fff;
	}
  .IT-navigation{
    height:40px;
    text-align: center;
    line-height: 40px;
    border-bottom: 1px solid #ebebeb;
  }
</style>
